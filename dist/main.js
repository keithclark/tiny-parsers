const e=(e,t)=>{const r=[];for(let s=128;s<1024;s++){const n=String.fromCharCode(s);if(!e.includes(n)&&(r.push(n),r.length>=t))break}return r},t=()=>{throw new TypeError("Invalid input")},r=(e,t={})=>e.replace(/&([a-z]+|#\d+|#x[\da-z]+);/gi,((e,r)=>{if("#"==r.at(0))return"x"==r.at(1).toLowerCase()?String.fromCharCode(parseInt(r.slice(2),16)):String.fromCharCode(+r.slice(1));if(Object.hasOwn(t,r))return t[r];throw new TypeError(`Unknown entity: ${r}`)})),s=e=>e.replace(/[\u00A0-\u9999<>&"'`]/gim,(e=>"&#"+e.charCodeAt(0)+";")),n=1,a=2,i=3,l=4,p=(e="")=>({type:2,value:e}),c=/<!doctype\s+([^\s>]+)\s*(.*?)>/gi,o=/<([a-z][\w-]*)(\s[^>]*)?>([^<]*)<\/\1\s*>/g,u=/\s+([\w:-]+)(?:=(?:"([^"]*)"|'([^']*)'|([^\s"'>]+)))?(?=\s|$)/g;var g=(s,n={})=>{const a=[],{namedEntityMap:i,textElements:l=[],voidElements:g=[]}=n,[d,$]=e(s,2),m=new RegExp(`${d}(\\d+)${$}`,"g"),h=e=>{const t=[];return e.split(m).forEach(((e,s)=>{s%2?t.push(a.at(+e)):""!==e&&t.push(p(r(e,i)))})),t},y=e=>`${d}${a.push(e)-1}${$}`,f=(e,t)=>y(((e="")=>({type:3,value:e}))(t)),E=(e,t,r,s,n)=>n?f(0,n):x(e,t,r,s),x=(e,t,s,n)=>{let a;a=l.includes(t)?[p(n)]:h(n);const c=((e,t={},r=[])=>({type:1,name:e,attributes:t,children:r}))(t,{},a);return s?.replace(u,((e,t,s)=>{c.attributes[t]=r(s??t,i)})),y(c)},w=(e,t,r)=>x(e,t,r,"");if(l.length){const e=new RegExp(`(?:<(${l.join("|")})(\\s[^>]*)?>(.*?)<\\/\\1s*>)|(?:\x3c!--(.*?)--\x3e)`,"gs");s=s.replace(e,E)}else s=s.replace(/<!--(.*?)-->/gs,f);if(s=s.replace(c,((e,t,r)=>y(((e="",t="")=>({type:4,name:e,legacyString:t}))(t,r)))),g.length){const e=new RegExp(`<(${g.join("|")})(\\s[^>]*)?>`,"g");s=s.replace(e,w)}for(;o.test(s);)s=s.replace(o,x);return s.includes("<")&&t(),h(s)};var d=(e,t={})=>e.map((e=>((e,t={})=>{const{voidElements:r=[],textElements:n=[]}=t,a=e=>{const{type:t,value:i}=e;if(3===t)return`\x3c!--${i}--\x3e`;if(4===t){const{name:t,legacyString:r}=e;let s=t;return r&&(s+=` ${r}`),`<!doctype ${s}>`}if(2===t)return s(i);if(1===t){const t=e,i=[];if(i.push(`<${e.name}`),t.attributes&&Object.entries(t.attributes).forEach((([e,t])=>{i.push(` ${e}="${s(t)}"`)})),i.push(">"),!r.includes(e.name)){let t;t=n.includes(e.name)?e=>e.value:a,i.push(...e.children?.map(t)),i.push(`</${e.name}>`)}return i.join("")}};return a(e)})(e,t))).join("");const $=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"],m=["script","style","textarea","title"],h={amp:"&",gt:">",lt:"<",quot:'"'};var y=(e,t)=>g(e,{namedEntityMap:h,voidElements:$,textElements:m,...t}),f=(e,t={})=>d(e,{namedEntityMap:h,voidElements:$,textElements:m,...t});const E=1,x=2,w=3,v=4,b=e=>e.includes('"')||e.includes("'"),C=e=>e=(e=(e=>e.replace(/\s+/g," "))(e)).replace(/, /g,","),S=/(\/\*(?:[\w\W]*?)\*\/)|(?:(["'])(?:\\.|(?!\2)[^\\\r\n])*\2)|([a-z]\(\s*[^'"].*?\))/g,j=/([\w-]+)\s*:\s*((?:[^\s:;][^:;]*?)|\s)\s*(;|$|\})/g,R=/@(-?[a-z][^{;@\s]*\s[^{;@]+?);/gi;var z=r=>{const[s,n,a,i]=e(r,4),l=new RegExp(`${s}(\\d+)${n}`,"g"),p=new RegExp(`${a}(\\d+)${i}`,"g"),c=new RegExp(`(?<=^|[;{}${s}${n}])\\s*([^;{}${s}${n}]+?)\\s*\\{([^{]*?)\\}`,"g"),o=[],u=[],g=(e,t,r,s)=>`${r}${e.push(t)-1}${s}`,d=e=>g(o,e,s,n),$=e=>g(u,e,a,i),m=e=>e.replace(p,((e,t)=>u[t])),h=(e,t=null)=>{const r=(e=C(e)).indexOf(" "),s=r>-1?e.slice(0,r):e,n=r>-1?m(e.slice(r).trim()):"";return t?((e,t,r)=>({type:3,identifier:e,rule:t,declarations:r}))(s,n,t):((e,t)=>({type:4,identifier:e,rule:t}))(s,n)},y=(e,r)=>{const s=[];e=C(e);return(r=C(r)).split(l).forEach(((e,r)=>{r%2?s.push(o.at(+e)):e&&""!==e.replace(j,((e,r,n)=>(r.startsWith("--")||" "!==n||t(),s.push(((e,t)=>({type:1,property:e,value:t}))(r,m(n))),""))).trim()&&t()})),e.startsWith("@")?h(e.slice(1),s):{type:2,selector:m(e),declarations:s}};for(r=r.replace(S,(e=>"("===e.at(1)||b(e.at(0))?$(e):"")),b(r)&&t(),r=r.replace(R,((e,t)=>d(h(t))));c.test(r);)r=r.replace(c,((e,t,r)=>d(y(t,r))));return y("",r).declarations};const k=e=>{let t="";return e.forEach(((r,s)=>{t+=O(r),(1===r.type&&s!==e.length-1||4===r.type)&&(t+=";")})),t},O=e=>2===e.type?`${e.selector}{${k(e.declarations)}}`:4===e.type?`@${e.identifier} ${e.rule}`:3===e.type?`${(e=>{let{rule:t,identifier:r}=e,s=`@${r}`;return t&&(s+=` ${t}`),s})(e)}{${k(e.declarations)}}`:1===e.type?`${e.property}:${e.value}`:void 0;var M=(e,t={})=>k(e);export{i as NODE_TYPE_COMMENT,l as NODE_TYPE_DOCTYPE,n as NODE_TYPE_ELEMENT,a as NODE_TYPE_TEXT,w as RULE_TYPE_AT_RULE_BLOCK,v as RULE_TYPE_AT_RULE_STATEMENT,E as RULE_TYPE_DECLARATION,x as RULE_TYPE_RULESET,z as parseCss,y as parseHtml,g as parseSgml,M as stringifyCss,f as stringifyHtml,d as stringifySgml};
